/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Body5;
import io.swagger.model.Body6;
import io.swagger.model.Body7;
import io.swagger.model.InlineResponse2002;
import io.swagger.model.InlineResponse2003;
import io.swagger.model.InlineResponse2004;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-11-01T02:17:21.680Z[GMT]")
@Api(value = "monitor", description = "the monitor API")
public interface MonitorApi {

    @ApiOperation(value = "Get workers arivals in days period", nickname = "workersArival", notes = "", response = InlineResponse2002.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "monitor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InlineResponse2002.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Something went wrong") })
    @RequestMapping(value = "/monitor/workers_arival",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<List<InlineResponse2002>> workersArival(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Body5 body
);


    @ApiOperation(value = "Get workers at object by work", nickname = "workersCountByWork", notes = "", response = InlineResponse2004.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "monitor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InlineResponse2004.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Something went wrong") })
    @RequestMapping(value = "/monitor/workers_count",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<List<InlineResponse2004>> workersCountByWork(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Body7 body
);


    @ApiOperation(value = "Get workers work time in day", nickname = "workersWorkTime", notes = "", response = InlineResponse2003.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")    }, tags={ "monitor", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = InlineResponse2003.class, responseContainer = "List"),
        @ApiResponse(code = 500, message = "Something went wrong") })
    @RequestMapping(value = "/monitor/workers_work_time",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<List<InlineResponse2003>> workersWorkTime(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Body6 body
);

}

