/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Companies;
import io.swagger.model.Works;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-11-01T02:17:21.680Z[GMT]")
@Api(value = "info", description = "the info API")
public interface InfoApi {

    @ApiOperation(value = "Get all companies", nickname = "getCompanies", notes = "", response = Companies.class, responseContainer = "List", tags={ "info", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Companies.class, responseContainer = "List") })
    @RequestMapping(value = "/info/companies",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Companies>> getCompanies();


    @ApiOperation(value = "Get all works", nickname = "getWorks", notes = "", response = Works.class, responseContainer = "List", tags={ "info", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Works.class, responseContainer = "List") })
    @RequestMapping(value = "/info/works",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Works>> getWorks();

}

